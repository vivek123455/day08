1.write a 'person' class to hold all the details?
code :

class person {
    constructor(firstname, lastname, age, country, city) {
        this.firstname = firstname
        this.lastname = lastname
        this.age = age
        this.country = country
        this.city = city
        this.score = 0
        this.skills = []
    }
    getFullname(){
        const fullname = this.firstname + '' + this.lastname
        return fullname 
    }
    get getScore(){
        return this.score 
    }
    get getSkills(){
        return this.skills 
    }
    set setScore(score){
        this.score += score 
    }
    set setSkill(skill){
        this.skills.push(skill)
    }
    getPersonInfo() {
        let fullname = this.getfullname()
        let skills =
        this.skills.length > 0 &&
        this.skills.slice(0, this.skills.length - 1).join(', ') +
        ` and ${this.skills[this.skills.length - 1]}`
        
        let formattedskills = skills ? `he knows ${skills}` : ''
        
        let info = `${fullname} is ${this.age}. he lives ${this.city},${this.country}. ${formattedskills}`
        console.log(this)
        return info 
    }
    static favouriteskill() {
        const skills = ['HTML', 'CSS', 'JS', 'React', 'Python', 'Node']
        const index = Math.floor(Math.random() * skills.length)
        console.log('hi')
        return skills[index]
    }
}

 console.log(person.favoriteskill())


2.write a class to calculate uber price?
code:

  (function($){
   var currentCur = 'MYR';
   var tripsTable = $('#trips-table');
   var fareColHeader = tripsTable.find('thead tr th:nth-child(4)');
   var fareColHeaderSum = fareColHeader.find('.af-faresum');
   if ( fareColHeaderSum.length === 0 ){
       fareColHeaderSum = $('<span class="af-faresum">(<span class=
     "af-faresumval">' + currentCur +'0.00</span>)</span>');
    }
  fareColHeader.append(fareColHeaderSum);
  var fareCol = tripsTable.find('tbody tr td:nth-child(4)');
  var convertCurrencyToNumber = function(value, currency){
   if ( typeof value !== 'string'){
       return 0.00;
   }
   if ( typeof currency=== 'undefined' || currency ===''){
      currency = 'MYR';
    }
    value = value.trim();
    if (value === currency + 'NaN' ){
       return 0.00;
       }
    return parseFloat(value.replace(currency,''));
      };
  fareCol.each(function(item, i ){
    var elem = $(this);
    var checkbox = elem.children('.af-checkwrapper');
    if ( checkbox.length === 0) {
      checkbox = $('<div class="af-checkwrapper"><input type=
             "checkbox" /></div>');
      elem.append(checkbox);
      }
   }).promise().done(function(){
       tripsTable.off('change', '.af-checkwrapper input');
       tripsTable.on('change', '.af-checkwrapper input', function(){
          var elem = $(this);
          var elemTd = elem.closest('td');
          var itemText = elemTd.text();
          var itemVal = convertCurrencyToNumber(itemText);
         var currentSumDom = fareColHeaderSum.find9'.af-faresumval');
         var currentSumText = currentSumDom.text();
         var currentSumVal = convertCurrencyToNumber(currentSumText);
          if (elem.prop('checked')) {
           currentSumVal = currentSumVal + itemVal;
            } else {
          currentSumVal = currentSumVal - itemVal;
              }
     currentSumDom.text(currentcur + Number(currentSumVal).toFixed(2));
               });
             });
         })(jQuery); 
 